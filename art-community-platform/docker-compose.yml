version: "3.8"

services:
  postgres-db:
    image: postgres:13.2-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: mobylab-app
      POSTGRES_DB: mobylab-app
      POSTGRES_PASSWORD: mobylab-app
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend-network

  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    expose:
      - "8080"
    depends_on:
      - postgres-db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-db;Database=mobylab-app;Username=mobylab-app;Password=mobylab-app
    networks:
      - backend-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - backend-network

  kong:
    image: kong:3.4
    container_name: kong
    restart: always
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"   # Portul public prin care Kong serve»ôte API-urile
      - "8001:8001"   # Portul de admin pentru Kong
    volumes:
      - ./kong/kong.yml:/usr/local/kong/kong.yml
    networks:
      - backend-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend-network

volumes:
  db-data:

networks:
  backend-network:
